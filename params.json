{
  "name": "finSentiment",
  "tagline": "Model developed as part of my 2014 PhD dissertation to analyze the relationship between Twitter sentiments and corporate financial distress",
  "body": "This project is part of my phd dissertation that I published in 2014.\r\n\r\nSetup Instructions (in progress)\r\n\r\nSetup\r\n-----\r\n\r\nAssuming that you are install the code on a Debian Linux. If not, find\r\nand replace the commands, like apt-get, with ones that fit your distro.\r\n\r\n1) install mysql, apache2, python3, virtualenv\r\n    sudo apt-get install mysql.server apache2 python3 virtualenv\r\n    \r\n    \r\n2) Setup mysql database\r\n    create database finsentimentdb;\r\n    create user 'financedbuser'@'localhost' identified by '<password>';\r\n    grant all privileges on finsentimentdb.* to 'financedbuser'@'localhost';\r\n    flush privileges;\r\n   \r\n3) setup and activate Python3 virtual environment\r\n    mkdir {env-location} - (eg. /var/www/env/)\r\n    virtualenv {env-location}/finSentimentENV --python=python3\r\n    source {env-location}/bin/activate\r\n    \r\n4) install all project requirements (make sure that you are in the virtual environment\r\n    pip install -r requirements.txt\r\n    note: if pip needs updating, run pip install pip --upgrade\t\r\n    notel if pip fails for python.h not found, run sudo apt-get install python3-dev\r\n5) download and configure the latest code from github \r\n    cd {location of where you want the code} eg. /var/www/apps\r\n    git clone https://github.com/hoteit/finSentiment.git\r\n    \r\n6) update project settings in {app-location}/finSentiment\r\n    - setup a Twitter app at https://apps.twitter.com (make sure you have a Twitter account first)\r\n    - get Consumer Key (API Key), Consumer Secret (API Secret), Access Token, \tAccess Token Secret\r\n    and add them in the appropriate location with the settings.py configuration file\r\n    - update the settings.py file with finSentiment app location in PROJECT_ROOT \r\n    and the database password under DATABASES\r\n    - you can also update the polling time and size for the companies from Twitter by changing\r\n    tweets_polling_time & tweets_polling_size\r\n       \r\n7) setup the application and the database model (make sure to be inside the virtual environment) \r\n    ./manage.py makemigrations\r\n\t./manage.py migrate\r\n\r\n8) setup apache for production server or you can prepare a local version (TODO : add instructions)\r\n\r\n\r\nDjango\r\n------\r\n\r\nfrom the django environment, create a super user in order to access the site administration.\r\nThen add a new user with the username \"system\". This is needed to keep track of the automated \r\nuser for extracting Twitter data.\r\n\t\r\nData Population\r\n---------------\r\nstep 1 - extract the list of company and stock symbols from Nasdaq website. The script retrieves the stock symbols of all publicly-held companies in the United States \r\nand it also adds  major market information.\r\n    ./manage.py runscript all_company_nasdaqcom_importer --settings=finSentiment.local_settings\r\n\r\nstep 2- run the script below to populate the financial data of the firms using last quarterly \r\ndata extracted from MorningStar.com and Yahoo Finance, calculates Altman Z-Score,\r\nand stores the results into the database.\r\n    ./manage.py runscript company_financials_extract --settings=finSentiment.local_settings\r\n    \r\nstep 3 - run the script below that first queries the list of companies' stock symbols in the database.\r\nIt then picks up on an iterative basis a sample set of stock symbols to search for on Twitter in real-time streaming. \r\nTweets associated with the stocks are then stored in the TwitterText database. \r\n   ./manage.py runscript company_tweets_collect -v3 --settings=finSentiment.local_settings\r\n \r\n\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}